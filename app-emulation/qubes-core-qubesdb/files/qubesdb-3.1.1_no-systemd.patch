From 97e75a7975d6429541aa9d139f9271fda7633a10 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Marek=20Marczykowski-G=C3=B3recki?=
 <marmarek@invisiblethingslab.com>
Date: Sat, 23 May 2015 02:38:25 +0200
Subject: [PATCH 1/3] daemon: fix logfile name in VM (when used)

---
 daemon/db-daemon.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/daemon/db-daemon.c b/daemon/db-daemon.c
index 861728b..606447c 100644
--- a/daemon/db-daemon.c
+++ b/daemon/db-daemon.c
@@ -731,7 +731,10 @@ int main(int argc, char **argv) {
                 exit(1);
             case 0:
                 close(ready_pipe[0]);
-                snprintf(log_path, sizeof(log_path), "/var/log/qubes/qubesdb.%s.log", d.remote_name);
+                if (d.remote_name)
+                    snprintf(log_path, sizeof(log_path), "/var/log/qubes/qubesdb.%s.log", d.remote_name);
+                else
+                    snprintf(log_path, sizeof(log_path), "/var/log/qubes/qubesdb.log");
 
                 close(0);
                 old_umask = umask(0);

From c9cca259c67543e2f49d3ebbde80496e4c2f082f Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Marek=20Marczykowski-G=C3=B3recki?=
 <marmarek@invisiblethingslab.com>
Date: Sat, 23 May 2015 02:38:39 +0200
Subject: [PATCH 2/3] daemon: create pidfile also in VM

---
 daemon/db-daemon.c | 18 ++++++++++--------
 1 file changed, 10 insertions(+), 8 deletions(-)

diff --git a/daemon/db-daemon.c b/daemon/db-daemon.c
index 606447c..e9ccf13 100644
--- a/daemon/db-daemon.c
+++ b/daemon/db-daemon.c
@@ -629,11 +629,12 @@ int create_pidfile(struct db_daemon_data *d) {
     FILE *pidfile;
     mode_t old_umask;
 
-    /* do not create pidfile for VM daemon - service is managed by systemd */
     if (!d->remote_name)
-        return 1;
-    snprintf(pidfile_name, sizeof(pidfile_name),
-            "/var/run/qubes/qubesdb.%s.pid", d->remote_name);
+        snprintf(pidfile_name, sizeof(pidfile_name),
+                "/var/run/qubes/qubesdb.pid");
+    else
+        snprintf(pidfile_name, sizeof(pidfile_name),
+                "/var/run/qubes/qubesdb.%s.pid", d->remote_name);
 
     old_umask = umask(0002);
     pidfile = fopen(pidfile_name, "w");
@@ -650,11 +651,12 @@ int create_pidfile(struct db_daemon_data *d) {
 void remove_pidfile(struct db_daemon_data *d) {
     char pidfile_name[256];
 
-    /* no pidfile for VM daemon - service is managed by systemd */
     if (!d->remote_name)
-        return;
-    snprintf(pidfile_name, sizeof(pidfile_name),
-            "/var/run/qubes/qubesdb.%s.pid", d->remote_name);
+        snprintf(pidfile_name, sizeof(pidfile_name),
+                "/var/run/qubes/qubesdb.pid");
+    else
+        snprintf(pidfile_name, sizeof(pidfile_name),
+                "/var/run/qubes/qubesdb.%s.pid", d->remote_name);
 
     unlink(pidfile_name);
 }

From 18db2dd6fce2dc6c71f2d30b2fcb939465a7ea62 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Marek=20Marczykowski-G=C3=B3recki?=
 <marmarek@invisiblethingslab.com>
Date: Sat, 23 May 2015 02:39:32 +0200
Subject: [PATCH 3/3] daemon: make systemd linking optional

---
 daemon/Makefile    |  8 ++++++--
 daemon/db-daemon.c | 11 ++++++++++-
 2 files changed, 16 insertions(+), 3 deletions(-)

diff --git a/daemon/Makefile b/daemon/Makefile
index 592838a..52a35d6 100644
--- a/daemon/Makefile
+++ b/daemon/Makefile
@@ -2,11 +2,15 @@
 CFLAGS += -I../include -I. -g -Wall -Werror -pie
 EXEEXT =
 
+SYSTEMD ?= 1
+
 ifneq ($(OS),Windows_NT)
 CFLAGS += -fPIC -O2
-CFLAGS += `pkg-config --cflags libsystemd || pkg-config --cflags libsystemd-daemon`
 CFLAGS += `pkg-config --cflags vchan-$(BACKEND_VMM)`
+ifeq ($(SYSTEMD),1)
+CFLAGS += `pkg-config --cflags libsystemd || pkg-config --cflags libsystemd-daemon`
 LIBS += `pkg-config --libs libsystemd || pkg-config --libs libsystemd-daemon`
+endif
 LIBS += `pkg-config --libs vchan-$(BACKEND_VMM)`
 
 else # Windows_NT
diff --git a/daemon/db-daemon.c b/daemon/db-daemon.c
index e9ccf13..17c1021 100644
--- a/daemon/db-daemon.c
+++ b/daemon/db-daemon.c
@@ -19,6 +19,7 @@
 #endif
 
 #ifndef WIN32
+#ifdef HAVE_SYSTEMD
 /* For now link with systemd unconditionaly (all Fedora versions are using it,
  * Archlinux also). But if someone needs no systemd in dependencies,
  * it can be easily turned off, check the code in main() - conditions on
@@ -26,6 +27,7 @@
  */
 #include <systemd/sd-daemon.h>
+#endif
 #else // !WIN32
 // parameters for a client pipe thread
 stuct thread_param {
     struct db_daemon_data *daemon;
@@ -717,7 +719,11 @@ int main(int argc, char **argv) {
      * sucessful start */
     /* FIXME: OS dependent code */
 #ifndef WIN32
+#ifdef HAVE_SYSTEMD
     if (!getenv("NOTIFY_SOCKET")) {
+#else
+    if (1) {
+#endif
         char buf[6];
         char log_path[MAX_FILE_PATH];
         int log_fd;
@@ -849,9 +855,12 @@ int main(int argc, char **argv) {
     /* now ready for serving requests, notify parent */
     /* FIXME: OS dependent code */
+#ifdef HAVE_SYSTEMD
     if (getenv("NOTIFY_SOCKET")) {
         sd_notify(1, "READY=1");
-    } else {
+    } else
+#endif
+    {
         if (write(ready_pipe[1], "ready", strlen("ready")) != strlen("ready"))
             perror("failed to notify parent");
         close(ready_pipe[1]);
